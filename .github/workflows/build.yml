name: Build, Test, Analyze, and Deploy

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  Analysis:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: verduleria
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving the quality of SonarCloud analysis
          fetch-depth: 0

      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      - name: Create .env file
        run: |
          echo "DB_USER=user" > ./backend/.env
          echo "DB_PASSWORD=password" >> ./backend/.env
          echo "DB_HOST=localhost" >> ./backend/.env
          echo "DB_PORT=5432" >> ./backend/.env
          echo "DB_NAME=verduleria" >> ./backend/.env
          echo "JWT_SECRET=test" >> ./backend/.env

      - name: Load DB Schema
        env:
          PGPASSWORD: password
        run: |
          psql -v ON_ERROR_STOP=1 --host localhost --username user --dbname verduleria -f ./backend/db/schema/DDL.sql
          psql -v ON_ERROR_STOP=1 --host localhost --username user --dbname verduleria -f ./backend/db/schema/DML.sql

      - name: Make Reports
        run: mkdir reports
        working-directory: ./backend

      - name: Run backend tests
        working-directory: ./backend
        env:
          PGHOST: localhost
          PGUSER: user
          PGPASSWORD: password
          PGDATABASE: verduleria
          PGPORT: 5432
          CI: true
        run: npm run test:coverage

      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: -Dsonar.projectKey=gabriel-ecc_desafio-latam-proyecto
            -Dsonar.organization=gabriel-ecc
            -Dsonar.sources=./backend/middleware,./backend/routes,./backend/src,./frontend/src
            -Dsonar.exclusions=**/node_modules/**,**/__tests__/**,**/*.test.js,**/*.test.jsx
            -Dsonar.tests=./backend/test
            -Dsonar.javascript.lcov.reportPaths=./backend/coverage/lcov.info
          projectBaseDir: .

  deploy-backend:
    needs: Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      - name: Deploy to Azure Functions
        uses: azure/functions-action@v1
        with:
          app-name: 'gatadecampobackend'
          package: './backend'
          publish-profile: ${{ secrets.AZURE_FUNCTIONS_PUBLISH_PROFILE }}

  deploy-frontend:
    needs: Analysis
    runs-on: ubuntu-latest
    name: Deploy Frontend to Static Web App
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Azure Static Web Apps
        id: build_and_deploy_job
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations
          action: 'upload'
          ###### App and build configurations ######
          app_location: '/frontend' # The location of your frontend source code
          api_location: '' # Not needed since your API is a separate web app
          output_location: 'dist' # The folder where your built files are located
          ###### End of configurations ######
